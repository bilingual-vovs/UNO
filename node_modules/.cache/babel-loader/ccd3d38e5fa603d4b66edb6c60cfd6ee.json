{"ast":null,"code":"var _jsxFileName = \"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/UNO/app/src/components/GameTable/GameTable.jsx\";\nimport React, { Component } from 'react';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameTable extends Component {\n  constructor() {\n    super(...arguments);\n    this._colors = [\"yellow\", \"green\", \"blue\", \"red\"];\n\n    this.mixer = array => {\n      for (let i = array.length; i; i--) {\n        let randomized = Math.floor(Math.random() * i);\n        [array[i - 1], array[randomized]] = [array[randomized], array[i - 1]];\n      }\n\n      return array;\n    };\n\n    this._cardGroupes = {\n      colode: [],\n      player: [],\n      bots: [],\n      played: []\n    };\n    this.state = {};\n  }\n\n  _createCard(color, name, size, posX, posY, face) {\n    var _name$;\n\n    this.setState({\n      [color[0] + ((_name$ = name[0]) !== null && _name$ !== void 0 ? _name$ : name)]: {\n        color,\n        name,\n        size,\n        posX,\n        posY,\n        face\n      }\n    });\n  }\n\n  _createCards() {\n    for (let color in this._colors) {\n      for (let i = 0; i < 10; i++) {\n        this._createCard(this._colors[color], i, 150, 60, 45, true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this._createCards();\n  }\n\n  render() {\n    let cards = this.state;\n    console.log(cards);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      children: [...cards].map(element => {\n        return /*#__PURE__*/_jsxDEV(Card, { ...element\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 55\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameTable;","map":{"version":3,"names":["React","Component","Card","GameTable","_colors","mixer","array","i","length","randomized","Math","floor","random","_cardGroupes","colode","player","bots","played","state","_createCard","color","name","size","posX","posY","face","setState","_createCards","componentDidMount","render","cards","console","log","map","element","id"],"sources":["/home/vova/Документы/Projects/UNO/app/src/components/GameTable/GameTable.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Card from '../Card/Card';\n\nclass GameTable extends Component {\n    _colors = [\"yellow\", \"green\", \"blue\", \"red\"]\n\n    mixer = array => {\n        for (let i = array.length; i; i--) {\n            let randomized = Math.floor(Math.random() * i);\n            [array[i - 1], array[randomized]] = [array[randomized], array[i - 1]];\n        }\n        return array;\n    }\n\n    _cardGroupes = {\n        colode: [],\n        player: [],\n        bots: [],\n        played: []\n    }\n\n    state = {\n\n    }\n\n    _createCard(color, name, size, posX, posY, face){\n        this.setState({\n            [color[0] + (name[0] ?? name)]: {\n                color,\n                name, \n                size, \n                posX,\n                posY, \n                face\n            }\n        })\n    }\n\n    _createCards(){\n        for(let color in this._colors){\n            for( let i = 0; i<10; i++){\n                this._createCard(this._colors[color], i, 150, 60, 45, true)\n            }\n        }\n    }\n    \n    componentDidMount(){\n        this._createCards()\n    }\n\n    render() {\n        let cards = this.state\n        console.log(cards)\n        return (\n            <div id='game'>\n                {\n                    [...cards].map((element)=>{return <Card key = {element.id} {...element}/>})\n                }\n            </div>\n        );\n    }\n}\n\nexport default GameTable;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAC9BG,OAD8B,GACpB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA4B,KAA5B,CADoB;;IAAA,KAG9BC,KAH8B,GAGtBC,KAAK,IAAI;MACb,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAnB,EAA2BD,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;QAC/B,IAAIE,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAA3B,CAAjB;QACA,CAACD,KAAK,CAACC,CAAC,GAAG,CAAL,CAAN,EAAeD,KAAK,CAACG,UAAD,CAApB,IAAoC,CAACH,KAAK,CAACG,UAAD,CAAN,EAAoBH,KAAK,CAACC,CAAC,GAAG,CAAL,CAAzB,CAApC;MACH;;MACD,OAAOD,KAAP;IACH,CAT6B;;IAAA,KAW9BO,YAX8B,GAWf;MACXC,MAAM,EAAE,EADG;MAEXC,MAAM,EAAE,EAFG;MAGXC,IAAI,EAAE,EAHK;MAIXC,MAAM,EAAE;IAJG,CAXe;IAAA,KAkB9BC,KAlB8B,GAkBtB,EAlBsB;EAAA;;EAsB9BC,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAqC;IAAA;;IAC5C,KAAKC,QAAL,CAAc;MACV,CAACN,KAAK,CAAC,CAAD,CAAL,cAAYC,IAAI,CAAC,CAAD,CAAhB,2CAAuBA,IAAvB,CAAD,GAAgC;QAC5BD,KAD4B;QAE5BC,IAF4B;QAG5BC,IAH4B;QAI5BC,IAJ4B;QAK5BC,IAL4B;QAM5BC;MAN4B;IADtB,CAAd;EAUH;;EAEDE,YAAY,GAAE;IACV,KAAI,IAAIP,KAAR,IAAiB,KAAKhB,OAAtB,EAA8B;MAC1B,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,EAAlB,EAAsBA,CAAC,EAAvB,EAA0B;QACtB,KAAKY,WAAL,CAAiB,KAAKf,OAAL,CAAagB,KAAb,CAAjB,EAAsCb,CAAtC,EAAyC,GAAzC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,IAAtD;MACH;IACJ;EACJ;;EAEDqB,iBAAiB,GAAE;IACf,KAAKD,YAAL;EACH;;EAEDE,MAAM,GAAG;IACL,IAAIC,KAAK,GAAG,KAAKZ,KAAjB;IACAa,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,oBACI;MAAK,EAAE,EAAC,MAAR;MAAA,UAEQ,CAAC,GAAGA,KAAJ,EAAWG,GAAX,CAAgBC,OAAD,IAAW;QAAC,oBAAO,QAAC,IAAD,OAA6BA;QAA7B,GAAaA,OAAO,CAACC,EAArB;UAAA;UAAA;UAAA;QAAA,QAAP;MAA+C,CAA1E;IAFR;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;AAzD6B;;AA4DlC,eAAehC,SAAf"},"metadata":{},"sourceType":"module"}