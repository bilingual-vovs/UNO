{"ast":null,"code":"import _toConsumableArray from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _defineProperty from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/uno/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import Card from'../Card/Card';import Alert from'../Alert/Alert';import{jsx as _jsx}from\"react/jsx-runtime\";var GameTable=/*#__PURE__*/function(_Component){_inherits(GameTable,_Component);var _super=_createSuper(GameTable);function GameTable(){var _this;_classCallCheck(this,GameTable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.winners=[];_this._lastZIndex=100;_this._botNumber=3;_this.direction=true;_this.nowMoving=0;_this._mounted=false;_this._colors=[\"yellow\",\"green\",\"blue\",\"red\"];_this._cardGroupes={colode:[],player:[],bots:[],played:[],active:[],move:function move(id,to){var _this$_cardGroupes=_this._cardGroupes,colode=_this$_cardGroupes.colode,bots=_this$_cardGroupes.bots,player=_this$_cardGroupes.player;for(var botKey in bots){var bot=bots[botKey];for(var cardKey in bot){var card=bot[cardKey];if(card===id){var _card=_this._cardGroupes.bots[botKey][cardKey];_this._cardGroupes[to].push(_card);_this._cardGroupes.bots[botKey].splice(_this._cardGroupes.bots[botKey].indexOf(_card),1);}}}for(var _cardKey in colode){var _card2=colode[_cardKey];if(_card2===id){var _card3=_this._cardGroupes.colode[_cardKey];_this._cardGroupes[to].push(_card3);_this._cardGroupes.colode.splice(_this._cardGroupes.colode.indexOf(_card3),1);}}for(var _cardKey2 in player){var _card4=player[_cardKey2];if(_card4===id){var _card5=_this._cardGroupes.player[_cardKey2];_this._cardGroupes[to].push(_card5);_this._cardGroupes.player.splice(_this._cardGroupes.player.indexOf(_card5),1);}}}};_this._newActive=[];_this._stopAction=0;_this.players=[_this._cardGroupes.player];_this._colodePos={x:55,y:35};_this.state={};_this._createCard=function(color,cardName,size,posX,posY,face){var _cardName$,_cardName$2,_cardName$3;var addIndx=arguments.length>6&&arguments[6]!==undefined?arguments[6]:'';var rot=arguments.length>7&&arguments[7]!==undefined?arguments[7]:0;var z=arguments.length>8&&arguments[8]!==undefined?arguments[8]:1;_this.setState(_defineProperty({},color[0]+((_cardName$=cardName[0])!==null&&_cardName$!==void 0?_cardName$:cardName)+addIndx,{color:color,cardName:cardName,size:size,posX:posX,posY:posY,face:face,id:color[0]+((_cardName$2=cardName[0])!==null&&_cardName$2!==void 0?_cardName$2:cardName)+addIndx,rot:rot,z:z}));_this._cardGroupes.colode.push(color[0]+((_cardName$3=cardName[0])!==null&&_cardName$3!==void 0?_cardName$3:cardName)+addIndx);};_this._normalizeColode=function(){var _assertThisInitialize=_assertThisInitialized(_this),_assertThisInitialize2=_assertThisInitialize._cardGroupes,colode=_assertThisInitialize2.colode,active=_assertThisInitialize2.active,_locateCard=_assertThisInitialize._locateCard,_assertThisInitialize3=_assertThisInitialize._colodePos,x=_assertThisInitialize3.x,y=_assertThisInitialize3.y,_flipCard=_assertThisInitialize._flipCard,_playCard=_assertThisInitialize._playCard;var i=colode.length+1;for(var card in colode){i--;_locateCard(colode[card],150,x+i*0.01,y+i*-0.1,false,i);_flipCard(colode[card],false);}_playCard(active[active.length-1]);};_this._locateCard=function(id,size,posX,posY,rot,z,face){_this.setState(function(state){var card=_objectSpread({},state[id]);card.size=size!==null&&size!==void 0?size:card[size];card.posX=posX!==null&&posX!==void 0?posX:card[posX];card.posY=posY!==null&&posY!==void 0?posY:card[posY];card.rot=rot!==null&&rot!==void 0?rot:card[rot];card.z=z!==null&&z!==void 0?z:card[z];return _defineProperty({},id,card);});};_this._flipCard=function(id,facing){_this.setState(function(state){var card=_objectSpread({},state[id]);card.face=facing!==null&&facing!==void 0?facing:!card.face;return _defineProperty({},id,card);});};_this._updateCardPosition=function(){var _assertThisInitialize4=_assertThisInitialized(_this),_assertThisInitialize5=_assertThisInitialize4._cardGroupes,player=_assertThisInitialize5.player,bots=_assertThisInitialize5.bots,_flipCard=_assertThisInitialize4._flipCard,_locateCard=_assertThisInitialize4._locateCard;var i=0;var y=0-player.length/2;for(var card in player){_flipCard(player[card],true);_locateCard(player[card],200,10+70/player.length/2+i*70/player.length,70+Math.abs(y*y/5.25)/player.length*10,3*y,i);y++;i++;}var botCount=1;for(var bot in bots){var botCrd=bots[bot];i=0;y=0-botCrd.length/2;for(var _card6 in botCrd){switch(botCount){case 1:_locateCard(botCrd[_card6],120,0-Math.abs(y*y/10),10+50/botCrd.length/2+i*50/botCrd.length,90*botCount+3*y,i);break;case 2:_locateCard(botCrd[_card6],120,20+50/botCrd.length/2+i*50/botCrd.length,0-Math.abs(y*y/5.25),180-3*y,i);break;case 3:_locateCard(botCrd[_card6],120,93+Math.abs(y*y/10),10+50/botCrd.length/2+i*50/botCrd.length,90*botCount-3*y,i);break;default:break;}y++;i++;}botCount++;}};_this._playCard=function(id){_this._cardGroupes.move(id,\"played\");_this._lastZIndex+=1;_this._flipCard(id,true);_this._locateCard(id,150,35,35,0,_this._lastZIndex);_this._updateCardPosition();_this._newActive.push(id);if(id[1]==='s')_this._stopAction++;if(id[1]===\"r\")_this.direction=!_this.direction;};_this._changeActive=function(){_this._cardGroupes.active=_this._newActive;_this._newActive=[];};_this.takeCard=function(){var player=_this.nowMoving;var card=_this._cardGroupes.colode.shift();if(player===0){_this._flipCard(card,true);_this._cardGroupes.player.push(card);}else{_this._flipCard(card,false);_this._cardGroupes.bots[player-1].push(card);}if(_this._cardGroupes.colode.length<5){_this._cardGroupes.colode=_this._cardGroupes.played;_this._mixColode();_this._cardGroupes.played=[];_this._normalizeColode();}_this._updateCardPosition();};_this.playerPlayCard=function(card){var _assertThisInitialize6=_assertThisInitialized(_this),isPLayers=_assertThisInitialize6.isPLayers,_assertThisInitialize7=_assertThisInitialize6._cardGroupes,active=_assertThisInitialize7.active,player=_assertThisInitialize7.player,nowMoving=_assertThisInitialize6.nowMoving,cardAlert=_assertThisInitialize6.props.cardAlert,nextMove=_assertThisInitialize6.nextMove,takeCard=_assertThisInitialize6.takeCard;var activeCard=active[active.length-1];var posibility;if(isPLayers(card)&&nowMoving===0&&card&&activeCard&&(card[0]===activeCard[0]||card[1]===activeCard[1]||card[0]===\"w\"||activeCard[0]===\"w\"||_this._newActive[_this._newActive.length-1][0]===\"w\")){_this._playCard(card);posibility=player.find(function(elm){return elm[0]===activeCard[0]||elm[1]===activeCard[1]||elm[0]==='w'||activeCard[0]==='w';});if(card[0]!==\"w\"&&card[1]!==\"r\"){_this._changeActive();nextMove();}else if(posibility===undefined){console.log(posibility);takeCard();nextMove();}}else{cardAlert();}};_this.botMove=function(){var id=_this.nowMoving-1;var _assertThisInitialize8=_assertThisInitialized(_this),_assertThisInitialize9=_assertThisInitialize8._cardGroupes,bots=_assertThisInitialize9.bots,activeArr=_assertThisInitialize9.active,playCard=_assertThisInitialize8._playCard,takeCard=_assertThisInitialize8.takeCard,_stopAction=_assertThisInitialize8._stopAction;var bot=bots[id];var active=activeArr[activeArr.length-1];var movementFinished,oneCardHasBeenTaken=false;var cardsToTake=0;activeArr.forEach(function(elm){if(elm.slice(0,2)===\"wp\"){cardsToTake+=4;}else if(elm[1]===\"p\"){cardsToTake+=2;}});for(var i=0;i<cardsToTake;i++){takeCard();}if(_stopAction>0){_this._cardGroupes.active=[_this._cardGroupes.active[_this._cardGroupes.active.length-1]];_this._stopAction-=1;_this.nextMove();}else{var a=setInterval(function(){var card=bot.find(function(elm){return elm[0]===active[0]||elm[1]===active[1]||active[0]==='w';});setTimeout(function(){});if(card){playCard(card);if(card[0]!==\"w\"&&card[1]!==\"r\"){movementFinished=true;}}else{takeCard();oneCardHasBeenTaken=true;}if(oneCardHasBeenTaken||movementFinished){clearInterval(a);if(movementFinished)_this._changeActive();_this.nextMove();}},600);}};_this.isPLayers=function(id){var player=_this._cardGroupes.player;if(player.indexOf(id)!==-1){return true;}else{return false;}};_this.playerMove=function(){var _assertThisInitialize10=_assertThisInitialized(_this),_assertThisInitialize11=_assertThisInitialize10._cardGroupes,activeArr=_assertThisInitialize11.active,player=_assertThisInitialize11.player,takeCard=_assertThisInitialize10.takeCard,nextMove=_assertThisInitialize10.nextMove,_stopAction=_assertThisInitialize10._stopAction;var active=activeArr[activeArr.length-1];var cardsToTake=0;activeArr.forEach(function(elm){if(elm.slice(0,2)===\"wp\"){cardsToTake+=4;}else if(elm[1]===\"p\"){cardsToTake+=2;}});var posibility=player.find(function(elm){return elm[0]===active[0]||elm[1]===active[1]||elm[0]==='w'||active[0]==='w';});for(var i=0;i<cardsToTake;i++){takeCard();}if(_stopAction>0){_stopAction--;_this._cardGroupes.active=[_this._cardGroupes.active[_this._cardGroupes.active.length-1]];nextMove();}else if(!posibility){takeCard();_this._cardGroupes.active=[_this._cardGroupes.active[_this._cardGroupes.active.length-1]];nextMove();}};_this.nextMove=function(){if(_this.direction){switch(_this.nowMoving){case _this._botNumber:_this.nowMoving=0;break;default:_this.nowMoving++;break;}}else{switch(_this.nowMoving){case 0:_this.nowMoving=3;break;default:_this.nowMoving--;break;}}if(_this.winners.indexOf(_this.nowMoving)!==-1){console.log(_this.winners);_this.nextMove();}else if(_this.nowMoving!==0){_this.isWinner();setTimeout(function(){_this.botMove();},700);}else{_this.isWinner();_this.playerMove();}};_this.isWinner=function(){var _assertThisInitialize12=_assertThisInitialized(_this),_assertThisInitialize13=_assertThisInitialize12._cardGroupes,player=_assertThisInitialize13.player,bots=_assertThisInitialize13.bots,id=_assertThisInitialize12.nowMoving;if(id===0){if(player.length===0)_this.winners.push(id);}else if(bots[id-1].length===0){_this.winners.push(id);}};return _this;}_createClass(GameTable,[{key:\"_createCards\",value:function _createCards(){var _colors=this._colors,_colodePos=this._colodePos,_createCard=this._createCard;var cardNum=0;for(var color in _colors){for(var i=0;i<10;i++){cardNum++;_createCard(_colors[color],i,150,_colodePos.x+cardNum*0.01,_colodePos.y+cardNum*-0.1,false);}cardNum++;_createCard(_colors[color],\"picker\",150,_colodePos.x+cardNum*0.01,_colodePos.y+cardNum*-0.1,false);cardNum++;_createCard(_colors[color],\"reverse\",150,_colodePos.x+cardNum*0.01,_colodePos.y+cardNum*-0.1,false);cardNum++;_createCard(_colors[color],\"skip\",150,_colodePos.x+cardNum*0.01,_colodePos.y+cardNum*-0.1,false);}for(var _i=0;_i<4;_i++){cardNum++;_createCard(\"wild\",\"colora_changer\",150,_colodePos.x+cardNum*0.01,_colodePos.y+cardNum*-0.1,false,_i);cardNum++;_createCard(\"wild\",\"pick_four\",150,_colodePos.x+cardNum*0.01,_colodePos.y+cardNum*-0.1,false,_i);}}},{key:\"_generateColode\",value:function _generateColode(){this._createCards();this._mixColode();}},{key:\"_mixColode\",value:function _mixColode(){var colodeCopy=_toConsumableArray(this._cardGroupes.colode);var newColode=[];while(colodeCopy.length>0){newColode.push(colodeCopy.splice(Math.floor(Math.random()*colodeCopy.length),1)[0]);}this._cardGroupes.colode=newColode;}},{key:\"_dealCards\",value:function _dealCards(){var colode=this._cardGroupes.colode,_botNumber=this._botNumber,playCard=this._playCard,_flipCard=this._flipCard,changeActive=this._changeActive;this._cardGroupes.player=colode.splice(colode.length-7,6);for(var i=0;i<_botNumber;i++){this._cardGroupes.bots[i]=colode.splice(colode.length-7,6);}this._updateCardPosition();_flipCard(colode[colode.length-1],true);playCard(colode[colode.length-1]);changeActive();}},{key:\"componentDidMount\",value:function componentDidMount(){if(!this._mounted){this._generateColode();this._dealCards();this.playerMove();this._normalizeColode();}this._mounted=true;}},{key:\"render\",value:function render(){var _this2=this;var cards=this.state;return/*#__PURE__*/_jsx(\"div\",{id:\"game\",children:Object.values(cards).map(function(element){return/*#__PURE__*/_jsx(Card,_objectSpread({playCard:function playCard(){_this2.playerPlayCard(element.id);},isPlayers:_this2.isPLayers},element),element.id);})});}}]);return GameTable;}(Component);export default GameTable;","map":{"version":3,"names":["React","Component","Card","Alert","GameTable","winners","_lastZIndex","_botNumber","direction","nowMoving","_mounted","_colors","_cardGroupes","colode","player","bots","played","active","move","id","to","botKey","bot","cardKey","card","push","splice","indexOf","_newActive","_stopAction","players","_colodePos","x","y","state","_createCard","color","cardName","size","posX","posY","face","addIndx","rot","z","setState","_normalizeColode","_locateCard","_flipCard","_playCard","i","length","facing","_updateCardPosition","Math","abs","botCount","botCrd","_changeActive","takeCard","shift","_mixColode","playerPlayCard","isPLayers","cardAlert","props","nextMove","activeCard","posibility","find","elm","undefined","console","log","botMove","activeArr","playCard","movementFinished","oneCardHasBeenTaken","cardsToTake","forEach","slice","a","setInterval","setTimeout","clearInterval","playerMove","isWinner","cardNum","_createCards","colodeCopy","newColode","floor","random","changeActive","_generateColode","_dealCards","cards","Object","values","map","element"],"sources":["/home/vova/Документы/Projects/uno/src/components/GameTable/GameTable.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Card from '../Card/Card';\nimport Alert from '../Alert/Alert';\n\nclass GameTable extends Component {\n    winners = []\n\n    _lastZIndex = 100\n    _botNumber = 3\n\n    direction = true\n    nowMoving = 0\n\n    _mounted = false\n\n    _colors = [\"yellow\", \"green\", \"blue\", \"red\"]\n\n    _cardGroupes = {\n        colode: [],\n        player: [],\n        bots: [],\n        played: [],\n        active: [],\n        move: (id, to) =>{\n            let {colode, bots, player} = this._cardGroupes\n            for(let botKey in bots){\n                let bot = bots[botKey]\n                for (let cardKey in bot){\n                    let card = bot[cardKey]\n                    if (card === id) {\n                        let card = this._cardGroupes.bots[botKey][cardKey]\n                        this._cardGroupes[to].push(card)\n                        this._cardGroupes.bots[botKey].splice(this._cardGroupes.bots[botKey].indexOf(card), 1)\n                    }\n                }\n            }\n            \n            for (let cardKey in colode){\n                let card = colode[cardKey]\n                if (card === id) {\n                    let card = this._cardGroupes.colode[cardKey]\n                    this._cardGroupes[to].push(card)\n                    this._cardGroupes.colode.splice(this._cardGroupes.colode.indexOf(card), 1)\n                }\n            }\n\n            for (let cardKey in player){\n                let card = player[cardKey]\n                if (card === id) {\n                    let card = this._cardGroupes.player[cardKey]\n                    this._cardGroupes[to].push(card)\n                    this._cardGroupes.player.splice(this._cardGroupes.player.indexOf(card), 1)\n                }\n            }\n        }\n    }\n    _newActive = []\n    _stopAction = 0\n    players = [this._cardGroupes.player]\n\n    _colodePos = {\n        x: 55, \n        y: 35\n    }\n\n    state = {\n\n    }\n\n    _createCard = (color, cardName, size, posX, posY, face, addIndx = '', rot = 0, z = 1)=>{\n        this.setState({\n            [color[0] + (cardName[0] ?? cardName) + addIndx]: {\n                color,\n                cardName, \n                size, \n                posX,\n                posY, \n                face,\n                id: color[0] + (cardName[0] ?? cardName) + addIndx, \n                rot,\n                z\n            }\n        })\n        this._cardGroupes.colode.push(color[0] + (cardName[0] ?? cardName) + addIndx)\n    }\n\n    _createCards(){\n        let {_colors, _colodePos, _createCard} = this\n        let cardNum = 0\n        for(let color in _colors){\n            for( let i = 0; i<10; i++){\n                cardNum++\n                _createCard(_colors[color], i, 150, _colodePos.x+cardNum*0.01, _colodePos.y+cardNum*-0.1, false)\n            }\n            cardNum++\n            _createCard(_colors[color], \"picker\", 150, _colodePos.x+cardNum*0.01, _colodePos.y+cardNum*-0.1, false)\n            cardNum++\n            _createCard(_colors[color], \"reverse\", 150, _colodePos.x+cardNum*0.01, _colodePos.y+cardNum*-0.1, false)\n            cardNum++\n            _createCard(_colors[color], \"skip\", 150, _colodePos.x+cardNum*0.01, _colodePos.y+cardNum*-0.1, false)\n        }\n        for(let i = 0; i< 4; i++){\n            cardNum++\n            _createCard(\"wild\", \"colora_changer\", 150, _colodePos.x+cardNum*0.01, _colodePos.y+cardNum*-0.1, false, i)\n            cardNum++\n            _createCard(\"wild\", \"pick_four\", 150, _colodePos.x+cardNum*0.01, _colodePos.y+cardNum*-0.1, false, i)\n        }   \n    }\n\n    _normalizeColode = () => {\n        let {_cardGroupes: {colode, active}, _locateCard, _colodePos: {x, y}, _flipCard, _playCard} = this\n        let i = colode.length +1\n        for (let card in colode){\n            i--\n            _locateCard(colode[card], 150, x+i*0.01, y+i*-0.1, false, i)\n            _flipCard(colode[card], false)\n        }\n        _playCard(active[active.length-1])\n    }\n\n    _generateColode(){\n        this._createCards()\n        this._mixColode()\n    }\n\n    _mixColode(){\n        let colodeCopy = [...this._cardGroupes.colode]\n        let newColode = []\n\n        while (colodeCopy.length>0){\n            newColode.push(colodeCopy.splice(Math.floor(Math.random()*colodeCopy.length), 1)[0]) \n        }\n\n        this._cardGroupes.colode = newColode\n    }\n\n    _dealCards(){\n        let {_cardGroupes: {colode}, _botNumber, _playCard: playCard, _flipCard, _changeActive: changeActive} = this\n        this._cardGroupes.player = colode.splice(colode.length-7, 6)\n        for(let i = 0; i<_botNumber;i++){\n            this._cardGroupes.bots[i] = colode.splice(colode.length-7, 6)\n        }\n\n       this._updateCardPosition()\n       _flipCard(colode[colode.length-1], true)\n        playCard(colode[colode.length-1])\n        changeActive()\n    }\n\n    _locateCard = (id, size, posX, posY, rot, z, face)=>{\n        this.setState(\n            (state)=>{\n                let card = {...state[id]}\n                card.size = (size ?? card[size])\n                card.posX = (posX ?? card[posX])\n                card.posY = (posY ?? card[posY])\n                card.rot = (rot ?? card[rot])\n                card.z = (z ?? card[z])\n                return {\n                    [id]: card\n                }\n            }\n        )\n    }\n\n    _flipCard = (id, facing) =>{\n        this.setState(\n            (state)=>{\n                let card = {...state[id]}\n                card.face = (facing ?? !card.face)\n                return {\n                    [id]: card\n                }\n            }\n        )\n    }\n\n    _updateCardPosition = () => {\n        let {_cardGroupes: {player, bots}, _flipCard, _locateCard} = this\n        let i = 0\n        let y = 0 - player.length / 2\n        for(let card in player){\n            _flipCard(player[card], true)\n            _locateCard(player[card], 200, 10+70 /player.length/2+(i*70 /player.length), 70+Math.abs(y*y/5.25)/player.length*10, 3*y, i)\n            y++\n            i++\n        }\n        \n\n        let botCount = 1\n        for(let bot in bots){\n            let botCrd = bots[bot]\n            i = 0\n            y = 0 - botCrd.length / 2\n            for(let card in botCrd){\n                switch (botCount) {\n                    case 1:\n                        _locateCard(botCrd[card], 120, 0-Math.abs(y*y/10),10+50 /botCrd.length/2+(i*50 /botCrd.length), 90*botCount+3*y, i)\n                    break;\n                    case 2:\n                        _locateCard(botCrd[card], 120, 20+50 /botCrd.length/2+(i*50 /botCrd.length), 0-Math.abs(y*y/5.25), 180-3*y, i)\n                    break;\n                    case 3:\n                        _locateCard(botCrd[card], 120, 93+Math.abs(y*y/10),10+50 /botCrd.length/2+(i*50 /botCrd.length), 90*botCount-3*y, i)\n                    break;\n                    default:\n\n                    break;\n                }\n                y++\n                i++\n            }\n            botCount++\n        }\n        \n\n    }\n\n    _playCard = (id) =>{\n        this._cardGroupes.move(id, \"played\")\n        this._lastZIndex += 1\n        this._flipCard(id, true)\n        this._locateCard(id, 150, 35, 35, 0, this._lastZIndex)\n        this._updateCardPosition()\n        this._newActive.push(id)\n        if (id[1] === 's') this._stopAction++\n        if (id[1] === \"r\") this.direction = !this.direction\n    }\n\n    _changeActive = () => {\n        this._cardGroupes.active = this._newActive\n        this._newActive = []\n    }\n    \n\n    takeCard = () => {\n        let player = this.nowMoving\n        let card = this._cardGroupes.colode.shift()\n        if (player === 0){\n            this._flipCard(card, true)\n            this._cardGroupes.player.push(card)\n        }\n        else{\n            this._flipCard(card, false)\n            this._cardGroupes.bots[player-1].push(card)\n        }\n\n        if (this._cardGroupes.colode.length < 5){\n            this._cardGroupes.colode = this._cardGroupes.played\n            this._mixColode()\n            this._cardGroupes.played = []\n            this._normalizeColode()\n        }\n\n        this._updateCardPosition()\n    }\n\n    playerPlayCard = (card) => {\n        let {isPLayers, _cardGroupes: {active, player}, nowMoving, props: {cardAlert}, nextMove, takeCard} = this\n        let activeCard = active[active.length-1]\n\n        let posibility \n        if(isPLayers(card) && nowMoving === 0 && card && activeCard &&(card[0] === activeCard[0] || card[1] === activeCard[1] || card[0] === \"w\" || activeCard[0] === \"w\" || this._newActive[this._newActive.length - 1][0] === \"w\")){\n            this._playCard(card)\n            posibility = player.find((elm)=>elm[0] === activeCard[0] || elm[1] === activeCard[1] || elm[0] === 'w'  || activeCard[0] === 'w' )\n            if (card[0] !== \"w\" && card[1] !== \"r\"){\n                this._changeActive()\n                nextMove()\n            } else if (posibility === undefined) {\n                console.log(posibility)\n                takeCard()\n                nextMove()\n            }\n        }\n        else {\n            cardAlert()\n        }\n        \n        \n    }\n\n    botMove = () => {\n        let id = this.nowMoving-1\n        let {_cardGroupes: {bots, active: activeArr}, _playCard: playCard, takeCard, _stopAction} = this\n        let bot = bots[id]\n        let active = activeArr[activeArr.length-1]\n        let movementFinished, oneCardHasBeenTaken = false\n\n        let cardsToTake = 0\n        activeArr.forEach((elm)=>{\n            if (elm.slice(0, 2) === \"wp\"){\n                cardsToTake += 4\n            }\n            else if (elm[1] === \"p\"){\n                cardsToTake += 2\n            }\n        })\n        \n        for(let i = 0; i<cardsToTake;i++){\n            takeCard()\n        }\n\n        if (_stopAction > 0){\n            this._cardGroupes.active = [this._cardGroupes.active[this._cardGroupes.active.length - 1]]\n            this._stopAction -= 1\n            this.nextMove()\n        }else{\n        let a = setInterval(()=>{\n            \n            let card = bot.find((elm)=>elm[0] === active[0] || elm[1] === active[1] || active[0] === 'w' )\n            setTimeout(()=>{})\n            if  (card){\n                playCard(card)\n                if ((card[0] !== \"w\" && card[1] !== \"r\")){\n                    movementFinished = true\n                }\n            }\n            else{\n                takeCard()\n                oneCardHasBeenTaken = true\n            }\n            if((oneCardHasBeenTaken || movementFinished)){\n                clearInterval(a)\n                if (movementFinished)   this._changeActive()\n                this.nextMove()\n            }\n        }, 600)\n        }\n\n    }\n\n    isPLayers = (id) => {\n        let {player} = this._cardGroupes\n        if(player.indexOf(id) !== -1){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n\n    playerMove = () => {\n        let {_cardGroupes: {active: activeArr, player}, takeCard, nextMove, _stopAction} = this\n        let active = activeArr[activeArr.length-1]\n\n\n        let cardsToTake = 0\n        activeArr.forEach((elm)=>{\n            if (elm.slice(0, 2) === \"wp\"){\n                cardsToTake += 4\n            }\n            else if (elm[1] === \"p\"){\n                cardsToTake += 2\n            }\n        })\n\n        let posibility = player.find((elm)=>elm[0] === active[0] || elm[1] === active[1] || elm[0] === 'w'  || active[0] === 'w' )\n        \n        for(let i = 0; i<cardsToTake;i++){\n            takeCard()\n        }\n        if (_stopAction> 0) {\n            _stopAction-- \n            this._cardGroupes.active = [this._cardGroupes.active[this._cardGroupes.active.length - 1]]\n            nextMove()\n        }\n        else if (! posibility){\n            takeCard()\n            this._cardGroupes.active = [this._cardGroupes.active[this._cardGroupes.active.length - 1]]\n            nextMove()\n        }\n\n\n    }\n\n    nextMove = () => {\n        \n        \n\n        if (this.direction){\n            switch (this.nowMoving) {\n                case this._botNumber:\n                    this.nowMoving = 0\n                break;\n                default:\n                    this.nowMoving++\n                break;\n            }\n        }\n        else{\n            switch (this.nowMoving) {\n                case 0:\n                    this.nowMoving = 3\n                break;\n                default:\n                    this.nowMoving--\n                break;\n            }\n        }\n        if (this.winners.indexOf(this.nowMoving) !== -1) {\n            console.log(this.winners);\n            this.nextMove()\n        }\n        else if (this.nowMoving !== 0){\n            this.isWinner()\n            setTimeout(()=>{\n                this.botMove()\n            }, 700)\n            \n        }\n        else{\n            this.isWinner()\n            this.playerMove()\n        }\n\n        \n    }\n\n    isWinner = () => {\n        let {_cardGroupes: {player, bots}, nowMoving: id} = this\n\n        if (id === 0) {\n            if (player.length === 0) this.winners.push(id)\n        }\n        else if (bots[id-1].length === 0){\n            this.winners.push(id)\n        }\n    }\n\n    \n    componentDidMount(){\n        if (!this._mounted){\n            this._generateColode()\n            this._dealCards()\n            this.playerMove()\n            this._normalizeColode()\n        }\n        this._mounted = true\n    }\n\n    render() {\n        let cards = this.state\n\n        return (\n            <div id='game'>\n                {\n                    Object.values(cards).map((element)=>{return <Card playCard={()=>{this.playerPlayCard(element.id)}} isPlayers={this.isPLayers} key = {element.id} {...element}/>})\n                }\n            </div>\n        );\n    \n        \n    }\n}\n\nexport default GameTable;\n"],"mappings":"yyCAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,KAAP,KAAiB,cAAjB,CACA,MAAOC,MAAP,KAAkB,gBAAlB,C,8CAEMC,U,uUACFC,O,CAAU,E,OAEVC,W,CAAc,G,OACdC,U,CAAa,C,OAEbC,S,CAAY,I,OACZC,S,CAAY,C,OAEZC,Q,CAAW,K,OAEXC,O,CAAU,CAAC,QAAD,CAAW,OAAX,CAAoB,MAApB,CAA4B,KAA5B,C,OAEVC,Y,CAAe,CACXC,MAAM,CAAE,EADG,CAEXC,MAAM,CAAE,EAFG,CAGXC,IAAI,CAAE,EAHK,CAIXC,MAAM,CAAE,EAJG,CAKXC,MAAM,CAAE,EALG,CAMXC,IAAI,CAAE,cAACC,EAAD,CAAKC,EAAL,CAAW,CACb,uBAA6B,MAAKR,YAAlC,CAAKC,MAAL,oBAAKA,MAAL,CAAaE,IAAb,oBAAaA,IAAb,CAAmBD,MAAnB,oBAAmBA,MAAnB,CACA,IAAI,GAAIO,OAAR,GAAkBN,KAAlB,CAAuB,CACnB,GAAIO,IAAG,CAAGP,IAAI,CAACM,MAAD,CAAd,CACA,IAAK,GAAIE,QAAT,GAAoBD,IAApB,CAAwB,CACpB,GAAIE,KAAI,CAAGF,GAAG,CAACC,OAAD,CAAd,CACA,GAAIC,IAAI,GAAKL,EAAb,CAAiB,CACb,GAAIK,MAAI,CAAG,MAAKZ,YAAL,CAAkBG,IAAlB,CAAuBM,MAAvB,EAA+BE,OAA/B,CAAX,CACA,MAAKX,YAAL,CAAkBQ,EAAlB,EAAsBK,IAAtB,CAA2BD,KAA3B,EACA,MAAKZ,YAAL,CAAkBG,IAAlB,CAAuBM,MAAvB,EAA+BK,MAA/B,CAAsC,MAAKd,YAAL,CAAkBG,IAAlB,CAAuBM,MAAvB,EAA+BM,OAA/B,CAAuCH,KAAvC,CAAtC,CAAoF,CAApF,EACH,CACJ,CACJ,CAED,IAAK,GAAID,SAAT,GAAoBV,OAApB,CAA2B,CACvB,GAAIW,OAAI,CAAGX,MAAM,CAACU,QAAD,CAAjB,CACA,GAAIC,MAAI,GAAKL,EAAb,CAAiB,CACb,GAAIK,OAAI,CAAG,MAAKZ,YAAL,CAAkBC,MAAlB,CAAyBU,QAAzB,CAAX,CACA,MAAKX,YAAL,CAAkBQ,EAAlB,EAAsBK,IAAtB,CAA2BD,MAA3B,EACA,MAAKZ,YAAL,CAAkBC,MAAlB,CAAyBa,MAAzB,CAAgC,MAAKd,YAAL,CAAkBC,MAAlB,CAAyBc,OAAzB,CAAiCH,MAAjC,CAAhC,CAAwE,CAAxE,EACH,CACJ,CAED,IAAK,GAAID,UAAT,GAAoBT,OAApB,CAA2B,CACvB,GAAIU,OAAI,CAAGV,MAAM,CAACS,SAAD,CAAjB,CACA,GAAIC,MAAI,GAAKL,EAAb,CAAiB,CACb,GAAIK,OAAI,CAAG,MAAKZ,YAAL,CAAkBE,MAAlB,CAAyBS,SAAzB,CAAX,CACA,MAAKX,YAAL,CAAkBQ,EAAlB,EAAsBK,IAAtB,CAA2BD,MAA3B,EACA,MAAKZ,YAAL,CAAkBE,MAAlB,CAAyBY,MAAzB,CAAgC,MAAKd,YAAL,CAAkBE,MAAlB,CAAyBa,OAAzB,CAAiCH,MAAjC,CAAhC,CAAwE,CAAxE,EACH,CACJ,CACJ,CArCU,C,OAuCfI,U,CAAa,E,OACbC,W,CAAc,C,OACdC,O,CAAU,CAAC,MAAKlB,YAAL,CAAkBE,MAAnB,C,OAEViB,U,CAAa,CACTC,CAAC,CAAE,EADM,CAETC,CAAC,CAAE,EAFM,C,OAKbC,K,CAAQ,E,OAIRC,W,CAAc,SAACC,KAAD,CAAQC,QAAR,CAAkBC,IAAlB,CAAwBC,IAAxB,CAA8BC,IAA9B,CAAoCC,IAApC,CAAyE,2CAA/BC,QAA+B,2DAArB,EAAqB,IAAjBC,IAAiB,2DAAX,CAAW,IAARC,EAAQ,2DAAJ,CAAI,CACnF,MAAKC,QAAL,oBACKT,KAAK,CAAC,CAAD,CAAL,cAAYC,QAAQ,CAAC,CAAD,CAApB,yCAA2BA,QAA3B,EAAuCK,OAD5C,CACsD,CAC9CN,KAAK,CAALA,KAD8C,CAE9CC,QAAQ,CAARA,QAF8C,CAG9CC,IAAI,CAAJA,IAH8C,CAI9CC,IAAI,CAAJA,IAJ8C,CAK9CC,IAAI,CAAJA,IAL8C,CAM9CC,IAAI,CAAJA,IAN8C,CAO9CtB,EAAE,CAAEiB,KAAK,CAAC,CAAD,CAAL,eAAYC,QAAQ,CAAC,CAAD,CAApB,2CAA2BA,QAA3B,EAAuCK,OAPG,CAQ9CC,GAAG,CAAHA,GAR8C,CAS9CC,CAAC,CAADA,CAT8C,CADtD,GAaA,MAAKhC,YAAL,CAAkBC,MAAlB,CAAyBY,IAAzB,CAA8BW,KAAK,CAAC,CAAD,CAAL,eAAYC,QAAQ,CAAC,CAAD,CAApB,2CAA2BA,QAA3B,EAAuCK,OAArE,EACH,C,OAyBDI,gB,CAAmB,UAAM,CACrB,qGAAKlC,YAAL,CAAoBC,MAApB,wBAAoBA,MAApB,CAA4BI,MAA5B,wBAA4BA,MAA5B,CAAqC8B,WAArC,uBAAqCA,WAArC,8CAAkDhB,UAAlD,CAA+DC,CAA/D,wBAA+DA,CAA/D,CAAkEC,CAAlE,wBAAkEA,CAAlE,CAAsEe,SAAtE,uBAAsEA,SAAtE,CAAiFC,SAAjF,uBAAiFA,SAAjF,CACA,GAAIC,EAAC,CAAGrC,MAAM,CAACsC,MAAP,CAAe,CAAvB,CACA,IAAK,GAAI3B,KAAT,GAAiBX,OAAjB,CAAwB,CACpBqC,CAAC,GACDH,WAAW,CAAClC,MAAM,CAACW,IAAD,CAAP,CAAe,GAAf,CAAoBQ,CAAC,CAACkB,CAAC,CAAC,IAAxB,CAA8BjB,CAAC,CAACiB,CAAC,CAAC,CAAC,GAAnC,CAAwC,KAAxC,CAA+CA,CAA/C,CAAX,CACAF,SAAS,CAACnC,MAAM,CAACW,IAAD,CAAP,CAAe,KAAf,CAAT,CACH,CACDyB,SAAS,CAAChC,MAAM,CAACA,MAAM,CAACkC,MAAP,CAAc,CAAf,CAAP,CAAT,CACH,C,OA+BDJ,W,CAAc,SAAC5B,EAAD,CAAKmB,IAAL,CAAWC,IAAX,CAAiBC,IAAjB,CAAuBG,GAAvB,CAA4BC,CAA5B,CAA+BH,IAA/B,CAAsC,CAChD,MAAKI,QAAL,CACI,SAACX,KAAD,CAAS,CACL,GAAIV,KAAI,kBAAOU,KAAK,CAACf,EAAD,CAAZ,CAAR,CACAK,IAAI,CAACc,IAAL,CAAaA,IAAb,SAAaA,IAAb,UAAaA,IAAb,CAAqBd,IAAI,CAACc,IAAD,CAAzB,CACAd,IAAI,CAACe,IAAL,CAAaA,IAAb,SAAaA,IAAb,UAAaA,IAAb,CAAqBf,IAAI,CAACe,IAAD,CAAzB,CACAf,IAAI,CAACgB,IAAL,CAAaA,IAAb,SAAaA,IAAb,UAAaA,IAAb,CAAqBhB,IAAI,CAACgB,IAAD,CAAzB,CACAhB,IAAI,CAACmB,GAAL,CAAYA,GAAZ,SAAYA,GAAZ,UAAYA,GAAZ,CAAmBnB,IAAI,CAACmB,GAAD,CAAvB,CACAnB,IAAI,CAACoB,CAAL,CAAUA,CAAV,SAAUA,CAAV,UAAUA,CAAV,CAAepB,IAAI,CAACoB,CAAD,CAAnB,CACA,0BACKzB,EADL,CACUK,IADV,EAGH,CAXL,EAaH,C,OAEDwB,S,CAAY,SAAC7B,EAAD,CAAKiC,MAAL,CAAe,CACvB,MAAKP,QAAL,CACI,SAACX,KAAD,CAAS,CACL,GAAIV,KAAI,kBAAOU,KAAK,CAACf,EAAD,CAAZ,CAAR,CACAK,IAAI,CAACiB,IAAL,CAAaW,MAAb,SAAaA,MAAb,UAAaA,MAAb,CAAuB,CAAC5B,IAAI,CAACiB,IAA7B,CACA,0BACKtB,EADL,CACUK,IADV,EAGH,CAPL,EASH,C,OAED6B,mB,CAAsB,UAAM,CACxB,uGAAKzC,YAAL,CAAoBE,MAApB,wBAAoBA,MAApB,CAA4BC,IAA5B,wBAA4BA,IAA5B,CAAmCiC,SAAnC,wBAAmCA,SAAnC,CAA8CD,WAA9C,wBAA8CA,WAA9C,CACA,GAAIG,EAAC,CAAG,CAAR,CACA,GAAIjB,EAAC,CAAG,EAAInB,MAAM,CAACqC,MAAP,CAAgB,CAA5B,CACA,IAAI,GAAI3B,KAAR,GAAgBV,OAAhB,CAAuB,CACnBkC,SAAS,CAAClC,MAAM,CAACU,IAAD,CAAP,CAAe,IAAf,CAAT,CACAuB,WAAW,CAACjC,MAAM,CAACU,IAAD,CAAP,CAAe,GAAf,CAAoB,GAAG,GAAIV,MAAM,CAACqC,MAAX,CAAkB,CAArB,CAAwBD,CAAC,CAAC,EAAF,CAAMpC,MAAM,CAACqC,MAAzD,CAAkE,GAAGG,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACA,CAAF,CAAI,IAAb,EAAmBnB,MAAM,CAACqC,MAA1B,CAAiC,EAAtG,CAA0G,EAAElB,CAA5G,CAA+GiB,CAA/G,CAAX,CACAjB,CAAC,GACDiB,CAAC,GACJ,CAGD,GAAIM,SAAQ,CAAG,CAAf,CACA,IAAI,GAAIlC,IAAR,GAAeP,KAAf,CAAoB,CAChB,GAAI0C,OAAM,CAAG1C,IAAI,CAACO,GAAD,CAAjB,CACA4B,CAAC,CAAG,CAAJ,CACAjB,CAAC,CAAG,EAAIwB,MAAM,CAACN,MAAP,CAAgB,CAAxB,CACA,IAAI,GAAI3B,OAAR,GAAgBiC,OAAhB,CAAuB,CACnB,OAAQD,QAAR,EACI,IAAK,EAAL,CACIT,WAAW,CAACU,MAAM,CAACjC,MAAD,CAAP,CAAe,GAAf,CAAoB,EAAE8B,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACA,CAAF,CAAI,EAAb,CAAtB,CAAuC,GAAG,GAAIwB,MAAM,CAACN,MAAX,CAAkB,CAArB,CAAwBD,CAAC,CAAC,EAAF,CAAMO,MAAM,CAACN,MAA5E,CAAqF,GAAGK,QAAH,CAAY,EAAEvB,CAAnG,CAAsGiB,CAAtG,CAAX,CACJ,MACA,IAAK,EAAL,CACIH,WAAW,CAACU,MAAM,CAACjC,MAAD,CAAP,CAAe,GAAf,CAAoB,GAAG,GAAIiC,MAAM,CAACN,MAAX,CAAkB,CAArB,CAAwBD,CAAC,CAAC,EAAF,CAAMO,MAAM,CAACN,MAAzD,CAAkE,EAAEG,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACA,CAAF,CAAI,IAAb,CAApE,CAAwF,IAAI,EAAEA,CAA9F,CAAiGiB,CAAjG,CAAX,CACJ,MACA,IAAK,EAAL,CACIH,WAAW,CAACU,MAAM,CAACjC,MAAD,CAAP,CAAe,GAAf,CAAoB,GAAG8B,IAAI,CAACC,GAAL,CAAStB,CAAC,CAACA,CAAF,CAAI,EAAb,CAAvB,CAAwC,GAAG,GAAIwB,MAAM,CAACN,MAAX,CAAkB,CAArB,CAAwBD,CAAC,CAAC,EAAF,CAAMO,MAAM,CAACN,MAA7E,CAAsF,GAAGK,QAAH,CAAY,EAAEvB,CAApG,CAAuGiB,CAAvG,CAAX,CACJ,MACA,QAEA,MAZJ,CAcAjB,CAAC,GACDiB,CAAC,GACJ,CACDM,QAAQ,GACX,CAGJ,C,OAEDP,S,CAAY,SAAC9B,EAAD,CAAO,CACf,MAAKP,YAAL,CAAkBM,IAAlB,CAAuBC,EAAvB,CAA2B,QAA3B,EACA,MAAKb,WAAL,EAAoB,CAApB,CACA,MAAK0C,SAAL,CAAe7B,EAAf,CAAmB,IAAnB,EACA,MAAK4B,WAAL,CAAiB5B,EAAjB,CAAqB,GAArB,CAA0B,EAA1B,CAA8B,EAA9B,CAAkC,CAAlC,CAAqC,MAAKb,WAA1C,EACA,MAAK+C,mBAAL,GACA,MAAKzB,UAAL,CAAgBH,IAAhB,CAAqBN,EAArB,EACA,GAAIA,EAAE,CAAC,CAAD,CAAF,GAAU,GAAd,CAAmB,MAAKU,WAAL,GACnB,GAAIV,EAAE,CAAC,CAAD,CAAF,GAAU,GAAd,CAAmB,MAAKX,SAAL,CAAiB,CAAC,MAAKA,SAAvB,CACtB,C,OAEDkD,a,CAAgB,UAAM,CAClB,MAAK9C,YAAL,CAAkBK,MAAlB,CAA2B,MAAKW,UAAhC,CACA,MAAKA,UAAL,CAAkB,EAAlB,CACH,C,OAGD+B,Q,CAAW,UAAM,CACb,GAAI7C,OAAM,CAAG,MAAKL,SAAlB,CACA,GAAIe,KAAI,CAAG,MAAKZ,YAAL,CAAkBC,MAAlB,CAAyB+C,KAAzB,EAAX,CACA,GAAI9C,MAAM,GAAK,CAAf,CAAiB,CACb,MAAKkC,SAAL,CAAexB,IAAf,CAAqB,IAArB,EACA,MAAKZ,YAAL,CAAkBE,MAAlB,CAAyBW,IAAzB,CAA8BD,IAA9B,EACH,CAHD,IAII,CACA,MAAKwB,SAAL,CAAexB,IAAf,CAAqB,KAArB,EACA,MAAKZ,YAAL,CAAkBG,IAAlB,CAAuBD,MAAM,CAAC,CAA9B,EAAiCW,IAAjC,CAAsCD,IAAtC,EACH,CAED,GAAI,MAAKZ,YAAL,CAAkBC,MAAlB,CAAyBsC,MAAzB,CAAkC,CAAtC,CAAwC,CACpC,MAAKvC,YAAL,CAAkBC,MAAlB,CAA2B,MAAKD,YAAL,CAAkBI,MAA7C,CACA,MAAK6C,UAAL,GACA,MAAKjD,YAAL,CAAkBI,MAAlB,CAA2B,EAA3B,CACA,MAAK8B,gBAAL,GACH,CAED,MAAKO,mBAAL,GACH,C,OAEDS,c,CAAiB,SAACtC,IAAD,CAAU,CACvB,yDAAKuC,SAAL,wBAAKA,SAAL,+CAAgBnD,YAAhB,CAA+BK,MAA/B,wBAA+BA,MAA/B,CAAuCH,MAAvC,wBAAuCA,MAAvC,CAAgDL,SAAhD,wBAAgDA,SAAhD,CAAmEuD,SAAnE,wBAA2DC,KAA3D,CAAmED,SAAnE,CAA+EE,QAA/E,wBAA+EA,QAA/E,CAAyFP,QAAzF,wBAAyFA,QAAzF,CACA,GAAIQ,WAAU,CAAGlD,MAAM,CAACA,MAAM,CAACkC,MAAP,CAAc,CAAf,CAAvB,CAEA,GAAIiB,WAAJ,CACA,GAAGL,SAAS,CAACvC,IAAD,CAAT,EAAmBf,SAAS,GAAK,CAAjC,EAAsCe,IAAtC,EAA8C2C,UAA9C,GAA4D3C,IAAI,CAAC,CAAD,CAAJ,GAAY2C,UAAU,CAAC,CAAD,CAAtB,EAA6B3C,IAAI,CAAC,CAAD,CAAJ,GAAY2C,UAAU,CAAC,CAAD,CAAnD,EAA0D3C,IAAI,CAAC,CAAD,CAAJ,GAAY,GAAtE,EAA6E2C,UAAU,CAAC,CAAD,CAAV,GAAkB,GAA/F,EAAsG,MAAKvC,UAAL,CAAgB,MAAKA,UAAL,CAAgBuB,MAAhB,CAAyB,CAAzC,EAA4C,CAA5C,IAAmD,GAArN,CAAH,CAA6N,CACzN,MAAKF,SAAL,CAAezB,IAAf,EACA4C,UAAU,CAAGtD,MAAM,CAACuD,IAAP,CAAY,SAACC,GAAD,QAAOA,IAAG,CAAC,CAAD,CAAH,GAAWH,UAAU,CAAC,CAAD,CAArB,EAA4BG,GAAG,CAAC,CAAD,CAAH,GAAWH,UAAU,CAAC,CAAD,CAAjD,EAAwDG,GAAG,CAAC,CAAD,CAAH,GAAW,GAAnE,EAA2EH,UAAU,CAAC,CAAD,CAAV,GAAkB,GAApG,EAAZ,CAAb,CACA,GAAI3C,IAAI,CAAC,CAAD,CAAJ,GAAY,GAAZ,EAAmBA,IAAI,CAAC,CAAD,CAAJ,GAAY,GAAnC,CAAuC,CACnC,MAAKkC,aAAL,GACAQ,QAAQ,GACX,CAHD,IAGO,IAAIE,UAAU,GAAKG,SAAnB,CAA8B,CACjCC,OAAO,CAACC,GAAR,CAAYL,UAAZ,EACAT,QAAQ,GACRO,QAAQ,GACX,CACJ,CAXD,IAYK,CACDF,SAAS,GACZ,CAGJ,C,OAEDU,O,CAAU,UAAM,CACZ,GAAIvD,GAAE,CAAG,MAAKV,SAAL,CAAe,CAAxB,CACA,uGAAKG,YAAL,CAAoBG,IAApB,wBAAoBA,IAApB,CAAkC4D,SAAlC,wBAA0B1D,MAA1B,CAAyD2D,QAAzD,wBAA8C3B,SAA9C,CAAmEU,QAAnE,wBAAmEA,QAAnE,CAA6E9B,WAA7E,wBAA6EA,WAA7E,CACA,GAAIP,IAAG,CAAGP,IAAI,CAACI,EAAD,CAAd,CACA,GAAIF,OAAM,CAAG0D,SAAS,CAACA,SAAS,CAACxB,MAAV,CAAiB,CAAlB,CAAtB,CACA,GAAI0B,iBAAJ,CAAsBC,mBAAmB,CAAG,KAA5C,CAEA,GAAIC,YAAW,CAAG,CAAlB,CACAJ,SAAS,CAACK,OAAV,CAAkB,SAACV,GAAD,CAAO,CACrB,GAAIA,GAAG,CAACW,KAAJ,CAAU,CAAV,CAAa,CAAb,IAAoB,IAAxB,CAA6B,CACzBF,WAAW,EAAI,CAAf,CACH,CAFD,IAGK,IAAIT,GAAG,CAAC,CAAD,CAAH,GAAW,GAAf,CAAmB,CACpBS,WAAW,EAAI,CAAf,CACH,CACJ,CAPD,EASA,IAAI,GAAI7B,EAAC,CAAG,CAAZ,CAAeA,CAAC,CAAC6B,WAAjB,CAA6B7B,CAAC,EAA9B,CAAiC,CAC7BS,QAAQ,GACX,CAED,GAAI9B,WAAW,CAAG,CAAlB,CAAoB,CAChB,MAAKjB,YAAL,CAAkBK,MAAlB,CAA2B,CAAC,MAAKL,YAAL,CAAkBK,MAAlB,CAAyB,MAAKL,YAAL,CAAkBK,MAAlB,CAAyBkC,MAAzB,CAAkC,CAA3D,CAAD,CAA3B,CACA,MAAKtB,WAAL,EAAoB,CAApB,CACA,MAAKqC,QAAL,GACH,CAJD,IAIK,CACL,GAAIgB,EAAC,CAAGC,WAAW,CAAC,UAAI,CAEpB,GAAI3D,KAAI,CAAGF,GAAG,CAAC+C,IAAJ,CAAS,SAACC,GAAD,QAAOA,IAAG,CAAC,CAAD,CAAH,GAAWrD,MAAM,CAAC,CAAD,CAAjB,EAAwBqD,GAAG,CAAC,CAAD,CAAH,GAAWrD,MAAM,CAAC,CAAD,CAAzC,EAAgDA,MAAM,CAAC,CAAD,CAAN,GAAc,GAArE,EAAT,CAAX,CACAmE,UAAU,CAAC,UAAI,CAAE,CAAP,CAAV,CACA,GAAK5D,IAAL,CAAU,CACNoD,QAAQ,CAACpD,IAAD,CAAR,CACA,GAAKA,IAAI,CAAC,CAAD,CAAJ,GAAY,GAAZ,EAAmBA,IAAI,CAAC,CAAD,CAAJ,GAAY,GAApC,CAAyC,CACrCqD,gBAAgB,CAAG,IAAnB,CACH,CACJ,CALD,IAMI,CACAlB,QAAQ,GACRmB,mBAAmB,CAAG,IAAtB,CACH,CACD,GAAIA,mBAAmB,EAAID,gBAA3B,CAA6C,CACzCQ,aAAa,CAACH,CAAD,CAAb,CACA,GAAIL,gBAAJ,CAAwB,MAAKnB,aAAL,GACxB,MAAKQ,QAAL,GACH,CACJ,CAnBkB,CAmBhB,GAnBgB,CAAnB,CAoBC,CAEJ,C,OAEDH,S,CAAY,SAAC5C,EAAD,CAAQ,CAChB,GAAKL,OAAL,CAAe,MAAKF,YAApB,CAAKE,MAAL,CACA,GAAGA,MAAM,CAACa,OAAP,CAAeR,EAAf,IAAuB,CAAC,CAA3B,CAA6B,CACzB,MAAO,KAAP,CACH,CAFD,IAGI,CACA,MAAO,MAAP,CACH,CACJ,C,OAEDmE,U,CAAa,UAAM,CACf,0GAAK1E,YAAL,CAA4B+D,SAA5B,yBAAoB1D,MAApB,CAAuCH,MAAvC,yBAAuCA,MAAvC,CAAgD6C,QAAhD,yBAAgDA,QAAhD,CAA0DO,QAA1D,yBAA0DA,QAA1D,CAAoErC,WAApE,yBAAoEA,WAApE,CACA,GAAIZ,OAAM,CAAG0D,SAAS,CAACA,SAAS,CAACxB,MAAV,CAAiB,CAAlB,CAAtB,CAGA,GAAI4B,YAAW,CAAG,CAAlB,CACAJ,SAAS,CAACK,OAAV,CAAkB,SAACV,GAAD,CAAO,CACrB,GAAIA,GAAG,CAACW,KAAJ,CAAU,CAAV,CAAa,CAAb,IAAoB,IAAxB,CAA6B,CACzBF,WAAW,EAAI,CAAf,CACH,CAFD,IAGK,IAAIT,GAAG,CAAC,CAAD,CAAH,GAAW,GAAf,CAAmB,CACpBS,WAAW,EAAI,CAAf,CACH,CACJ,CAPD,EASA,GAAIX,WAAU,CAAGtD,MAAM,CAACuD,IAAP,CAAY,SAACC,GAAD,QAAOA,IAAG,CAAC,CAAD,CAAH,GAAWrD,MAAM,CAAC,CAAD,CAAjB,EAAwBqD,GAAG,CAAC,CAAD,CAAH,GAAWrD,MAAM,CAAC,CAAD,CAAzC,EAAgDqD,GAAG,CAAC,CAAD,CAAH,GAAW,GAA3D,EAAmErD,MAAM,CAAC,CAAD,CAAN,GAAc,GAAxF,EAAZ,CAAjB,CAEA,IAAI,GAAIiC,EAAC,CAAG,CAAZ,CAAeA,CAAC,CAAC6B,WAAjB,CAA6B7B,CAAC,EAA9B,CAAiC,CAC7BS,QAAQ,GACX,CACD,GAAI9B,WAAW,CAAE,CAAjB,CAAoB,CAChBA,WAAW,GACX,MAAKjB,YAAL,CAAkBK,MAAlB,CAA2B,CAAC,MAAKL,YAAL,CAAkBK,MAAlB,CAAyB,MAAKL,YAAL,CAAkBK,MAAlB,CAAyBkC,MAAzB,CAAkC,CAA3D,CAAD,CAA3B,CACAe,QAAQ,GACX,CAJD,IAKK,IAAI,CAAEE,UAAN,CAAiB,CAClBT,QAAQ,GACR,MAAK/C,YAAL,CAAkBK,MAAlB,CAA2B,CAAC,MAAKL,YAAL,CAAkBK,MAAlB,CAAyB,MAAKL,YAAL,CAAkBK,MAAlB,CAAyBkC,MAAzB,CAAkC,CAA3D,CAAD,CAA3B,CACAe,QAAQ,GACX,CAGJ,C,OAEDA,Q,CAAW,UAAM,CAIb,GAAI,MAAK1D,SAAT,CAAmB,CACf,OAAQ,MAAKC,SAAb,EACI,IAAK,OAAKF,UAAV,CACI,MAAKE,SAAL,CAAiB,CAAjB,CACJ,MACA,QACI,MAAKA,SAAL,GACJ,MANJ,CAQH,CATD,IAUI,CACA,OAAQ,MAAKA,SAAb,EACI,IAAK,EAAL,CACI,MAAKA,SAAL,CAAiB,CAAjB,CACJ,MACA,QACI,MAAKA,SAAL,GACJ,MANJ,CAQH,CACD,GAAI,MAAKJ,OAAL,CAAasB,OAAb,CAAqB,MAAKlB,SAA1B,IAAyC,CAAC,CAA9C,CAAiD,CAC7C+D,OAAO,CAACC,GAAR,CAAY,MAAKpE,OAAjB,EACA,MAAK6D,QAAL,GACH,CAHD,IAIK,IAAI,MAAKzD,SAAL,GAAmB,CAAvB,CAAyB,CAC1B,MAAK8E,QAAL,GACAH,UAAU,CAAC,UAAI,CACX,MAAKV,OAAL,GACH,CAFS,CAEP,GAFO,CAAV,CAIH,CANI,IAOD,CACA,MAAKa,QAAL,GACA,MAAKD,UAAL,GACH,CAGJ,C,OAEDC,Q,CAAW,UAAM,CACb,0GAAK3E,YAAL,CAAoBE,MAApB,yBAAoBA,MAApB,CAA4BC,IAA5B,yBAA4BA,IAA5B,CAA8CI,EAA9C,yBAAmCV,SAAnC,CAEA,GAAIU,EAAE,GAAK,CAAX,CAAc,CACV,GAAIL,MAAM,CAACqC,MAAP,GAAkB,CAAtB,CAAyB,MAAK9C,OAAL,CAAaoB,IAAb,CAAkBN,EAAlB,EAC5B,CAFD,IAGK,IAAIJ,IAAI,CAACI,EAAE,CAAC,CAAJ,CAAJ,CAAWgC,MAAX,GAAsB,CAA1B,CAA4B,CAC7B,MAAK9C,OAAL,CAAaoB,IAAb,CAAkBN,EAAlB,EACH,CACJ,C,iEArVD,uBAAc,CACV,GAAKR,QAAL,CAAyC,IAAzC,CAAKA,OAAL,CAAcoB,UAAd,CAAyC,IAAzC,CAAcA,UAAd,CAA0BI,WAA1B,CAAyC,IAAzC,CAA0BA,WAA1B,CACA,GAAIqD,QAAO,CAAG,CAAd,CACA,IAAI,GAAIpD,MAAR,GAAiBzB,QAAjB,CAAyB,CACrB,IAAK,GAAIuC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAC,EAAlB,CAAsBA,CAAC,EAAvB,CAA0B,CACtBsC,OAAO,GACPrD,WAAW,CAACxB,OAAO,CAACyB,KAAD,CAAR,CAAiBc,CAAjB,CAAoB,GAApB,CAAyBnB,UAAU,CAACC,CAAX,CAAawD,OAAO,CAAC,IAA9C,CAAoDzD,UAAU,CAACE,CAAX,CAAauD,OAAO,CAAC,CAAC,GAA1E,CAA+E,KAA/E,CAAX,CACH,CACDA,OAAO,GACPrD,WAAW,CAACxB,OAAO,CAACyB,KAAD,CAAR,CAAiB,QAAjB,CAA2B,GAA3B,CAAgCL,UAAU,CAACC,CAAX,CAAawD,OAAO,CAAC,IAArD,CAA2DzD,UAAU,CAACE,CAAX,CAAauD,OAAO,CAAC,CAAC,GAAjF,CAAsF,KAAtF,CAAX,CACAA,OAAO,GACPrD,WAAW,CAACxB,OAAO,CAACyB,KAAD,CAAR,CAAiB,SAAjB,CAA4B,GAA5B,CAAiCL,UAAU,CAACC,CAAX,CAAawD,OAAO,CAAC,IAAtD,CAA4DzD,UAAU,CAACE,CAAX,CAAauD,OAAO,CAAC,CAAC,GAAlF,CAAuF,KAAvF,CAAX,CACAA,OAAO,GACPrD,WAAW,CAACxB,OAAO,CAACyB,KAAD,CAAR,CAAiB,MAAjB,CAAyB,GAAzB,CAA8BL,UAAU,CAACC,CAAX,CAAawD,OAAO,CAAC,IAAnD,CAAyDzD,UAAU,CAACE,CAAX,CAAauD,OAAO,CAAC,CAAC,GAA/E,CAAoF,KAApF,CAAX,CACH,CACD,IAAI,GAAItC,GAAC,CAAG,CAAZ,CAAeA,EAAC,CAAE,CAAlB,CAAqBA,EAAC,EAAtB,CAAyB,CACrBsC,OAAO,GACPrD,WAAW,CAAC,MAAD,CAAS,gBAAT,CAA2B,GAA3B,CAAgCJ,UAAU,CAACC,CAAX,CAAawD,OAAO,CAAC,IAArD,CAA2DzD,UAAU,CAACE,CAAX,CAAauD,OAAO,CAAC,CAAC,GAAjF,CAAsF,KAAtF,CAA6FtC,EAA7F,CAAX,CACAsC,OAAO,GACPrD,WAAW,CAAC,MAAD,CAAS,WAAT,CAAsB,GAAtB,CAA2BJ,UAAU,CAACC,CAAX,CAAawD,OAAO,CAAC,IAAhD,CAAsDzD,UAAU,CAACE,CAAX,CAAauD,OAAO,CAAC,CAAC,GAA5E,CAAiF,KAAjF,CAAwFtC,EAAxF,CAAX,CACH,CACJ,C,+BAaD,0BAAiB,CACb,KAAKuC,YAAL,GACA,KAAK5B,UAAL,GACH,C,0BAED,qBAAY,CACR,GAAI6B,WAAU,oBAAO,KAAK9E,YAAL,CAAkBC,MAAzB,CAAd,CACA,GAAI8E,UAAS,CAAG,EAAhB,CAEA,MAAOD,UAAU,CAACvC,MAAX,CAAkB,CAAzB,CAA2B,CACvBwC,SAAS,CAAClE,IAAV,CAAeiE,UAAU,CAAChE,MAAX,CAAkB4B,IAAI,CAACsC,KAAL,CAAWtC,IAAI,CAACuC,MAAL,GAAcH,UAAU,CAACvC,MAApC,CAAlB,CAA+D,CAA/D,EAAkE,CAAlE,CAAf,EACH,CAED,KAAKvC,YAAL,CAAkBC,MAAlB,CAA2B8E,SAA3B,CACH,C,0BAED,qBAAY,CACR,GAAoB9E,OAApB,CAAwG,IAAxG,CAAKD,YAAL,CAAoBC,MAApB,CAA6BN,UAA7B,CAAwG,IAAxG,CAA6BA,UAA7B,CAAoDqE,QAApD,CAAwG,IAAxG,CAAyC3B,SAAzC,CAA8DD,SAA9D,CAAwG,IAAxG,CAA8DA,SAA9D,CAAwF8C,YAAxF,CAAwG,IAAxG,CAAyEpC,aAAzE,CACA,KAAK9C,YAAL,CAAkBE,MAAlB,CAA2BD,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACsC,MAAP,CAAc,CAA5B,CAA+B,CAA/B,CAA3B,CACA,IAAI,GAAID,EAAC,CAAG,CAAZ,CAAeA,CAAC,CAAC3C,UAAjB,CAA4B2C,CAAC,EAA7B,CAAgC,CAC5B,KAAKtC,YAAL,CAAkBG,IAAlB,CAAuBmC,CAAvB,EAA4BrC,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACsC,MAAP,CAAc,CAA5B,CAA+B,CAA/B,CAA5B,CACH,CAEF,KAAKE,mBAAL,GACAL,SAAS,CAACnC,MAAM,CAACA,MAAM,CAACsC,MAAP,CAAc,CAAf,CAAP,CAA0B,IAA1B,CAAT,CACCyB,QAAQ,CAAC/D,MAAM,CAACA,MAAM,CAACsC,MAAP,CAAc,CAAf,CAAP,CAAR,CACA2C,YAAY,GACf,C,iCA2RD,4BAAmB,CACf,GAAI,CAAC,KAAKpF,QAAV,CAAmB,CACf,KAAKqF,eAAL,GACA,KAAKC,UAAL,GACA,KAAKV,UAAL,GACA,KAAKxC,gBAAL,GACH,CACD,KAAKpC,QAAL,CAAgB,IAAhB,CACH,C,sBAED,iBAAS,iBACL,GAAIuF,MAAK,CAAG,KAAK/D,KAAjB,CAEA,mBACI,YAAK,EAAE,CAAC,MAAR,UAEQgE,MAAM,CAACC,MAAP,CAAcF,KAAd,EAAqBG,GAArB,CAAyB,SAACC,OAAD,CAAW,CAAC,mBAAO,KAAC,IAAD,gBAAM,QAAQ,CAAE,mBAAI,CAAC,MAAI,CAACvC,cAAL,CAAoBuC,OAAO,CAAClF,EAA5B,EAAgC,CAArD,CAAuD,SAAS,CAAE,MAAI,CAAC4C,SAAvE,EAAyGsC,OAAzG,EAAyFA,OAAO,CAAClF,EAAjG,CAAP,CAA2H,CAAhK,CAFR,EADJ,CASH,C,uBAhcmBlB,S,EAmcxB,cAAeG,UAAf"},"metadata":{},"sourceType":"module"}