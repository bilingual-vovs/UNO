{"ast":null,"code":"var _jsxFileName = \"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/UNO/app/src/components/GameTable/GameTable.jsx\";\nimport React, { Component } from 'react';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameTable extends Component {\n  constructor() {\n    super(...arguments);\n    this._colors = [\"yellow\", \"green\", \"blue\", \"red\"];\n\n    this.mixer = array => {\n      for (let i = array.length; i; i--) {\n        let randomized = Math.floor(Math.random() * i);\n        [array[i - 1], array[randomized]] = [array[randomized], array[i - 1]];\n      }\n\n      return array; //here\n    };\n\n    this.state = {\n      player: [],\n      bots: [],\n      colode: [],\n      playedCards: [],\n      gameDirection: true\n    };\n  }\n\n  _createCard(color, cardName, size, posX, posY, face, id) {\n    return {\n      color,\n      cardName,\n      size,\n      posX,\n      posY,\n      face,\n      id: color[0] + cardName[0]\n    };\n  }\n\n  _generateColode() {\n    let colode = [];\n    let count = 0;\n\n    for (let color in this._colors) {\n      for (let i = 0; i < 10; i++) {\n        colode.push(this._createCard(this._colors[color], i, 150, 55 + count * 0.2, 45 + count, false));\n        count -= 0.1;\n      }\n\n      colode.push(this._createCard(this._colors[color], \"picker\", 150, 55 + count * 0.2, 45 + count, false));\n      count -= 0.1;\n      colode.push(this._createCard(this._colors[color], \"reverse\", 150, 55 + count * 0.2, 45 + count, false));\n      count -= 0.1;\n      colode.push(this._createCard(this._colors[color], \"skip\", 150, 55 + count * 0.2, 45 + count, false));\n      count -= 0.1;\n    }\n\n    colode.push(this._createCard(\"wild\", \"colora_changer\", 150, 55 + count * 0.2, 45 + count, false));\n    count -= 0.1;\n    colode.push(this._createCard(\"wild\", \"pick_four\", 150, 55 + count * 0.2, 45 + count, false));\n    count -= 0.1;\n    return colode;\n  }\n\n  _mixColode() {\n    this.setState(_ref => {\n      let {\n        colode\n      } = _ref;\n      return this.mixer(colode).map((card, i) => {\n        card.posX = 55 + i * 0.02;\n        card.posY = 45 - i * 0.1;\n        return card;\n      });\n    });\n  }\n\n  _reFaceCard() {}\n\n  componentDidMount() {\n    this.setState({\n      colode: this._generateColode()\n    });\n\n    this._mixColode();\n  }\n\n  render() {\n    let {\n      colode\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      children: colode.map(element => {\n        return /*#__PURE__*/_jsxDEV(Card, { ...element\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 51\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameTable;","map":{"version":3,"names":["React","Component","Card","GameTable","_colors","mixer","array","i","length","randomized","Math","floor","random","state","player","bots","colode","playedCards","gameDirection","_createCard","color","cardName","size","posX","posY","face","id","_generateColode","count","push","_mixColode","setState","map","card","_reFaceCard","componentDidMount","render","element"],"sources":["/home/vova/Документы/Projects/UNO/app/src/components/GameTable/GameTable.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Card from '../Card/Card';\n\nclass GameTable extends Component {\n    _colors = [\"yellow\", \"green\", \"blue\", \"red\"]\n\n    mixer = array => {\n        for (let i = array.length; i; i--) {\n            let randomized = Math.floor(Math.random() * i);\n            [array[i - 1], array[randomized]] = [array[randomized], array[i - 1]];\n        }\n        return array;//here\n    }\n\n    state = {\n        player: [],\n        bots: [],\n        colode: [],\n        playedCards: [],\n        gameDirection: true\n    }\n\n    _createCard(color, cardName, size, posX, posY, face, id){\n        return {\n            color, \n            cardName, \n            size,\n            posX,\n            posY,\n            face,\n            id: color[0] + cardName[0]\n        }\n    }\n\n    _generateColode(){\n        let colode = []\n        let count = 0\n        for(let color in this._colors){\n            for(let i = 0; i<10; i++){\n                colode.push(this._createCard(this._colors[color], i, 150, 55+count*0.2, 45+count, false))\n                count -= 0.1\n            }\n            colode.push(this._createCard(this._colors[color], \"picker\", 150, 55+count*0.2, 45+count, false))\n            count -= 0.1\n            colode.push(this._createCard(this._colors[color], \"reverse\", 150, 55+count*0.2, 45+count, false))\n            count -= 0.1\n            colode.push(this._createCard(this._colors[color], \"skip\", 150, 55+count*0.2, 45+count, false))\n            count -= 0.1\n        }\n        colode.push(this._createCard(\"wild\", \"colora_changer\", 150, 55+count*0.2, 45+count, false))\n        count -= 0.1\n        colode.push(this._createCard(\"wild\", \"pick_four\", 150, 55+count*0.2, 45+count, false))\n        count -= 0.1\n        return colode\n    }\n\n    _mixColode(){\n        this.setState(\n            ({colode}) =>{\n                return this.mixer(colode)\n                    .map((card, i)=>{\n                        card.posX = 55 + i * 0.02\n                        card.posY = 45 - i * 0.1\n                        return card\n                    })\n            }\n        )\n    }\n\n\n    _reFaceCard(){\n        \n    }\n\n    componentDidMount(){\n        this.setState({colode: this._generateColode()})\n        this._mixColode()\n    }\n\n    render() {\n        let {colode} = this.state\n        return (\n            <div id='game'>\n                {\n                    colode.map((element)=>{return <Card key = {element.id} {...element}/>})\n                }\n            </div>\n        );\n    }\n}\n\nexport default GameTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}