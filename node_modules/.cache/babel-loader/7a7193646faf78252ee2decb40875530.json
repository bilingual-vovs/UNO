{"ast":null,"code":"var _jsxFileName = \"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/UNO/app/src/components/GameTable/GameTable.jsx\";\nimport React, { Component } from 'react';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameTable extends Component {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this._botNumber = 3;\n    this._mounted = false;\n    this._colors = [\"yellow\", \"green\", \"blue\", \"red\"];\n    this._cardGroupes = {\n      colode: [],\n      player: [],\n      bots: [],\n      played: []\n    };\n    this._colodePos = {\n      x: 55,\n      y: 40\n    };\n    this.state = {};\n\n    this._createCard = function (color, cardName, size, posX, posY, face) {\n      var _cardName$, _cardName$2, _cardName$3;\n\n      let addIndx = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';\n      let rot = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n      let z = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n\n      _this.setState({\n        [color[0] + ((_cardName$ = cardName[0]) !== null && _cardName$ !== void 0 ? _cardName$ : cardName) + addIndx]: {\n          color,\n          cardName,\n          size,\n          posX,\n          posY,\n          face,\n          id: color[0] + ((_cardName$2 = cardName[0]) !== null && _cardName$2 !== void 0 ? _cardName$2 : cardName) + addIndx,\n          rot,\n          z\n        }\n      });\n\n      _this._cardGroupes.colode.push(color[0] + ((_cardName$3 = cardName[0]) !== null && _cardName$3 !== void 0 ? _cardName$3 : cardName) + addIndx);\n    };\n\n    this._locateCard = (id, size, posX, posY, rot, z) => {\n      this.setState(state => {\n        let card = { ...state[id]\n        };\n        card.size = size !== null && size !== void 0 ? size : card[size];\n        card.posX = posX !== null && posX !== void 0 ? posX : card[posX];\n        card.posY = posY !== null && posY !== void 0 ? posY : card[posY];\n        card.rot = rot !== null && rot !== void 0 ? rot : card[rot];\n        card.z = z !== null && z !== void 0 ? z : card[z];\n        return {\n          [id]: card\n        };\n      });\n    };\n\n    this._flipCard = (id, facing) => {\n      this.setState(state => {\n        let card = { ...state[id]\n        };\n        card.face = facing !== null && facing !== void 0 ? facing : !state[id];\n        return {\n          [id]: card\n        };\n      });\n    };\n  }\n\n  _createCards() {\n    let {\n      _colors,\n      _colodePos,\n      _createCard\n    } = this;\n\n    for (let color in _colors) {\n      for (let i = 0; i < 10; i++) {\n        _createCard(_colors[color], i, 150, _colodePos.x, _colodePos.y, false);\n      }\n\n      _createCard(_colors[color], \"picker\", 150, _colodePos.x, _colodePos.y, false);\n\n      _createCard(_colors[color], \"reverse\", 150, _colodePos.x, _colodePos.y, false);\n\n      _createCard(_colors[color], \"skip\", 150, _colodePos.x, _colodePos.y, false);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      _createCard(\"wild\", \"colora_changer\", 150, _colodePos.x, _colodePos.y, false, i);\n\n      _createCard(\"wild\", \"pick_four\", 150, _colodePos.x, _colodePos.y, false, i);\n    }\n  }\n\n  _generateColode() {\n    this._createCards();\n\n    this._mixColode();\n  }\n\n  _mixColode() {\n    let colodeCopy = [...this._cardGroupes.colode];\n    let newColode = [];\n\n    while (colodeCopy.length > 0) {\n      newColode.push(colodeCopy.splice(Math.floor(Math.random() * colodeCopy.length), 1)[0]);\n    }\n\n    this._cardGroupes.colode = newColode;\n  }\n\n  _dealCards() {\n    let {\n      _cardGroupes: {\n        colode\n      },\n      _botNumber\n    } = this;\n    this._cardGroupes.player = colode.splice(0, 20);\n\n    for (let i = 0; i < _botNumber; i++) {\n      this._cardGroupes.bots[i] = colode.splice(0, 6);\n    }\n\n    let {\n      _cardGroupes: {\n        player,\n        bots\n      },\n      _flipCard,\n      _locateCard\n    } = this;\n    let i = 0;\n    let y = 0 - player.length / 2;\n\n    for (let card in player) {\n      _flipCard(player[card], true);\n\n      _locateCard(player[card], 200, 10 + i * 70 / player.length, 70 + Math.abs(y * y / 5.25), 3 * y, i);\n\n      y++;\n      i++;\n    }\n  }\n\n  componentDidMount() {\n    if (!this._mounted) {\n      this._generateColode();\n\n      this._dealCards();\n    }\n\n    this._mounted = true;\n  }\n\n  render() {\n    let cards = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      children: Object.values(cards).map(element => {\n        return /*#__PURE__*/_jsxDEV(Card, { ...element\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 65\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameTable;","map":{"version":3,"names":["React","Component","Card","GameTable","_botNumber","_mounted","_colors","_cardGroupes","colode","player","bots","played","_colodePos","x","y","state","_createCard","color","cardName","size","posX","posY","face","addIndx","rot","z","setState","id","push","_locateCard","card","_flipCard","facing","_createCards","i","_generateColode","_mixColode","colodeCopy","newColode","length","splice","Math","floor","random","_dealCards","abs","componentDidMount","render","cards","Object","values","map","element"],"sources":["/home/vova/Документы/Projects/UNO/app/src/components/GameTable/GameTable.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Card from '../Card/Card';\n\nclass GameTable extends Component {\n    _botNumber = 3\n\n    _mounted = false\n\n    _colors = [\"yellow\", \"green\", \"blue\", \"red\"]\n\n    _cardGroupes = {\n        colode: [],\n        player: [],\n        bots: [],\n        played: []\n    }\n\n    _colodePos = {\n        x: 55, \n        y: 40\n    }\n\n    state = {\n\n    }\n\n    _createCard = (color, cardName, size, posX, posY, face, addIndx = '', rot = 0, z = 1)=>{\n        this.setState({\n            [color[0] + (cardName[0] ?? cardName) + addIndx]: {\n                color,\n                cardName, \n                size, \n                posX,\n                posY, \n                face,\n                id: color[0] + (cardName[0] ?? cardName) + addIndx, \n                rot,\n                z\n            }\n        })\n        this._cardGroupes.colode.push(color[0] + (cardName[0] ?? cardName) + addIndx)\n    }\n\n    _createCards(){\n        let {_colors, _colodePos, _createCard} = this\n        for(let color in _colors){\n            for( let i = 0; i<10; i++){\n                _createCard(_colors[color], i, 150, _colodePos.x, _colodePos.y, false)\n            }\n            _createCard(_colors[color], \"picker\", 150, _colodePos.x, _colodePos.y, false)\n            _createCard(_colors[color], \"reverse\", 150, _colodePos.x, _colodePos.y, false)\n            _createCard(_colors[color], \"skip\", 150, _colodePos.x, _colodePos.y, false)\n        }\n        for(let i = 0; i< 4; i++){\n            _createCard(\"wild\", \"colora_changer\", 150, _colodePos.x, _colodePos.y, false, i)\n            _createCard(\"wild\", \"pick_four\", 150, _colodePos.x, _colodePos.y, false, i)\n        }   \n    }\n\n    _generateColode(){\n        this._createCards()\n        this._mixColode()\n    }\n\n    _mixColode(){\n        let colodeCopy = [...this._cardGroupes.colode]\n        let newColode = []\n\n        while (colodeCopy.length>0){\n            newColode.push(colodeCopy.splice(Math.floor(Math.random()*colodeCopy.length), 1)[0]) \n        }\n\n        this._cardGroupes.colode = newColode\n    }\n\n    _dealCards(){\n        let {_cardGroupes: {colode}, _botNumber} = this\n        this._cardGroupes.player = colode.splice(0, 20)\n        for(let i = 0; i<_botNumber;i++){\n            this._cardGroupes.bots[i] = colode.splice(0, 6)\n        }\n\n        let {_cardGroupes: {player, bots}, _flipCard, _locateCard} = this\n        let i = 0\n        let y = 0 - player.length / 2\n        for(let card in player){\n            _flipCard(player[card], true)\n            _locateCard(player[card], 200, 10+(i*70 /player.length), 70+Math.abs(y*y/5.25), 3*y, i)\n            y++\n            i++\n        }\n    }\n\n    _locateCard = (id, size, posX, posY, rot, z)=>{\n        this.setState(\n            (state)=>{\n                let card = {...state[id]}\n                card.size = (size ?? card[size])\n                card.posX = (posX ?? card[posX])\n                card.posY = (posY ?? card[posY])\n                card.rot = (rot ?? card[rot])\n                card.z = (z ?? card[z])\n                return {\n                    [id]: card\n                }\n            }\n        )\n    }\n\n    _flipCard = (id, facing) =>{\n        this.setState(\n            (state)=>{\n                let card = {...state[id]}\n                card.face = (facing ?? !state[id])\n                return {\n                    [id]: card\n                }\n            }\n        )\n    }\n    \n    componentDidMount(){\n        if (!this._mounted){\n            this._generateColode()\n            this._dealCards()\n        }\n        this._mounted = true\n    }\n\n    render() {\n        let cards = this.state\n\n        return (\n            <div id='game'>\n                {\n                    Object.values(cards).map((element)=>{return <Card key = {element.id} {...element}/>})\n                }\n            </div>\n        );\n    \n        \n    }\n}\n\nexport default GameTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}