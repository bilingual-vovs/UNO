{"ast":null,"code":"var _jsxFileName = \"/home/vova/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/UNO/app/src/components/GamePreview/GamePreview.jsx\";\nimport React, { Component } from 'react';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GamePreview extends Component {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.mounted = false;\n    this.state = {\n      cards: {}\n    };\n\n    this._createCard = function (color, cardName, size, posX, posY, face) {\n      let addIndx = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';\n      let rot = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n      let z = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n\n      _this.setState(_ref => {\n        var _cardName$, _cardName$2;\n\n        let {\n          cards\n        } = _ref;\n        return {\n          cards: { ...cards,\n            [color[0] + ((_cardName$ = cardName[0]) !== null && _cardName$ !== void 0 ? _cardName$ : cardName) + addIndx]: {\n              color,\n              cardName,\n              size,\n              posX,\n              posY,\n              face,\n              id: color[0] + ((_cardName$2 = cardName[0]) !== null && _cardName$2 !== void 0 ? _cardName$2 : cardName) + addIndx,\n              rot,\n              z\n            }\n          }\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    let i = 0;\n\n    if (!this.mounted) {\n      setInterval(() => {\n        i++;\n\n        this._createCard([\"red\", \"blue\", \"yellow\", \"green\"][Math.floor(Math.random() * 3)], [1, 2, 3, 4, 5, 6, 7, 8, 9, \"picker\", \"skip\", 'reverse'][Math.floor(Math.random() * 11)], 150, Math.floor(Math.random() * 100), Math.floor(Math.random() * 100), Math.floor(Math.random() * 2), i, Math.floor(Math.random() * 360), i);\n\n        this.setState(_ref2 => {\n          let {\n            cards\n          } = _ref2;\n\n          if (Object.values(cards).length > 150) {\n            let res = { ...cards\n            };\n            delete res[Object.keys(res)[0]];\n            console.log(\"150 reached\");\n            return {\n              cards: res\n            };\n          }\n        });\n      }, 400);\n      this.mounted = true;\n    }\n  }\n\n  render() {\n    let {\n      cards\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), Object.values(cards).map(element => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          isPlayers: () => {},\n          ...element\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 65\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GamePreview;","map":{"version":3,"names":["React","Component","Card","GamePreview","mounted","state","cards","_createCard","color","cardName","size","posX","posY","face","addIndx","rot","z","setState","id","componentDidMount","i","setInterval","Math","floor","random","Object","values","length","res","keys","console","log","render","map","element"],"sources":["/home/vova/Документы/Projects/UNO/app/src/components/GamePreview/GamePreview.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Card from '../Card/Card';\n\nclass GamePreview extends Component {\n    mounted = false\n\n    state = {\n        cards: {}\n    }\n\n    _createCard = (color, cardName, size, posX, posY, face, addIndx = '', rot = 0, z = 1)=>{\n        this.setState(({cards})=>{\n            return {\n               cards:  {\n                ...cards,\n                [color[0] + (cardName[0] ?? cardName) + addIndx]: {\n                color,\n                cardName, \n                size, \n                posX,\n                posY, \n                face,\n                id: color[0] + (cardName[0] ?? cardName) + addIndx, \n                rot,\n                z\n            }\n            }\n            } \n            \n        })\n\n    }\n\n    componentDidMount(){\n        let i = 0\n        if (!this.mounted){\n            setInterval(()=>{\n                i++\n                this._createCard([\"red\", \"blue\", \"yellow\", \"green\"][Math.floor(Math.random()*3)], \n                [1, 2, 3, 4, 5, 6, 7, 8, 9, \"picker\", \"skip\", 'reverse'][Math.floor(Math.random()*11)],\n                150,\n                Math.floor(Math.random()*100),\n                Math.floor(Math.random()*100),\n                Math.floor(Math.random()*2),\n                i,\n                Math.floor(Math.random()*360),\n                i)\n                this.setState(\n                    ({cards})=>{\n                        if (Object.values(cards).length > 150){\n                            let res = {...cards}\n                            delete res[Object.keys(res)[0]]\n                            console.log(\"150 reached\")\n                            return {\n                                cards: res\n                            }\n                        }\n                    }\n                )\n            }, 400)\n            this.mounted = true\n        }\n        \n        \n    }\n\n    render() {\n        let {cards} = this.state\n        return (\n            <div id='preview'>\n                <button>Start Game</button>\n                {\n                    Object.values(cards).map((element)=>{return <Card isPlayers={()=>{}} key = {element.id} {...element}/>})\n                }\n            </div>\n        );\n    }\n}\n\nexport default GamePreview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}